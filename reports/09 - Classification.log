Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Plot the figures
import plotly.express as px
import plotly.graph_objects as go

import kaleido

# Cr√©ation du mesh pour voir la bordure de d√©cision
mesh_size = .02
margin = 0.25

# Create a mesh grid on which we will run our model
x_min, x_max = train_set[0].min() - margin, train_set[0].max() + margin
y_min, y_max = train_set[1].min() - margin, train_set[1].max() + margin
xrange = np.arange(x_min, x_max, mesh_size)
yrange = np.arange(y_min, y_max, mesh_size)
xx, yy = np.meshgrid(xrange, yrange)

# Les couleurs pour la bordure
color_scale = [[0, "rgb(255, 255, 255)"], [1, "rgb(122, 122, 122)"]]

preds = model.predict(test_set.T)
preds[preds != test_labels] = -1    

Z = np.array(model.predict(np.c_[xx.ravel(), yy.ravel()])).astype(str)
Z = Z.reshape(xx.shape)

fig = go.Figure()

fig.add_trace(
    go.Contour(
        x=xrange,
        y=yrange,
        z=Z,
        colorscale=color_scale,
        showscale=False
    )
)

fig.add_trace(
    go.Scatter(x=train_set[0][train_labels == 0], y=train_set[1][train_labels==0], mode="markers",
      marker=dict(color="rgb(2,48,71)"), #showlegend = False,
       name="Entrainement: 0"
    )
)

fig.add_trace(
    go.Scatter(x=train_set[0][train_labels == 1], y=train_set[1][train_labels==1], mode="markers",
      marker=dict(color="rgb(255,158,2)"), #showlegend = False,
       name="Entrainement: 1"
    )
)

fig.add_trace(
    go.Scatter(x=test_set[0][preds == 0], y=test_set[1][preds==0], mode="markers",
      marker=dict(color="rgb(28,128,178)", size=7.5, line=dict(width=2, color='DarkSlateGrey')),
                  name="Correctement Pr√©dit comme 0"
    )
)

fig.add_trace(
    go.Scatter(x=test_set[0][preds == 1], y=test_set[1][preds==1], mode="markers",
      marker=dict(color="rgb(176,78,68)", size=7.5, line=dict(width=2, color='DarkSlateGrey')),
                  name="Correctement Pr√©dit comme 1"
    )
)

fig.add_trace(
    go.Scatter(x=test_set[0][preds == -1], y=test_set[1][preds==-1], mode="markers",
      marker=dict(color="rgb(255,0,0)", size=10, line=dict(width=2, color='DarkSlateGrey')),
                  name="Erreur Pr√©dit comme 0 au lieu de 1"
    )
)

fig.update_layout(height=800, width=800, title_text="La bordure de d√©cision de notre mod√®le")
fig.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [3][0m, in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mexpress[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpx[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgraph_objects[39;00m [38;5;28;01mas[39;00m [38;5;21;01mgo[39;00m
[0;32m----> 5[0m [38;5;28;01mimport[39;00m [38;5;21;01mkaleido[39;00m
[1;32m      7[0m [38;5;66;03m# Cr√©ation du mesh pour voir la bordure de d√©cision[39;00m
[1;32m      8[0m mesh_size [38;5;241m=[39m [38;5;241m.02[39m

[0;31mModuleNotFoundError[0m: No module named 'kaleido'
ModuleNotFoundError: No module named 'kaleido'

